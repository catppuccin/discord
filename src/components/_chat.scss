main[class^="chatContent"] {
  .expression-picker-chat-input-button button {
    background-color: transparent !important;
  }
  div[class^="messagesWrapper"] {
    [data-list-id="chat-messages"] {
      div[class^="buttons"] * {
        color: var(--interactive-normal) !important;
        border-color: #{$crust};
      }

      // new message bar
      div[class^="newMessagesBar"] {
        button {
          color: #{$crust};
        }
      }

      // reactions
      [id^="message-reactions"] {
        div[class^="reaction"] {
          &:not(div[class^="reactionCount"]):hover {
            background-color: var(--brand-experiment-20a);
            border-color: var(--brand-experiment-30a);
          }

          div[class^="reactionInner"] {
            border-radius: 0.4rem;
          }
        }
      }
      // Super reactions and beta badge
      div[class*="isBurstReactionPicker_"] {
        box-shadow:
          0 0 0 2px $mauve,
          0 0 16px $lavender;
      }
      div[class^="navButtonSuperReactActive"],
      div[class^="navButtonSuperReactActive"]:hover {
        background: linear-gradient(270deg, $pink, $lavender 33.63%, $mauve);
        color: $crust;
      }
      div[class*="betaTag_"] {
        background: var(--brand-experiment) !important;
        color: $crust;
      }
      button[class*="navButtonActive_"],
      button[class*="navButtonActive_"]:hover {
        color: $crust;
      }
      div[class*="colorPremiumGradient_"][class*="focused_"] {
        background: linear-gradient(270deg, $pink, $lavender 33.63%, $mauve);
        color: $crust !important;
      }
      div[class*="isBurstReactionPicker"] {
        border: none;
        box-shadow:
          0 0 0 2px $mauve,
          0 0 16px $lavender;
      }
      // Voice messages play button
      div[class*="playButtonContainer_"] {
        background: var(--brand-experiment) !important;
      }
      svg[class*="playIcon_"] path {
        fill: $crust;
      }

      // chat header
      div[class^="container"][class*="header_"] {
        div[class*="addReactButton_"],
        div[class^="buttons"]:not([class*="lookBlank_"])
          div[class^="contents"] {
          background: $surface0;
          &:hover {
            background-color: var(--brand-experiment-20a);
            border-color: var(--brand-experiment-30a);
          }
        }
      }

      // "Messages failed to load" bar
      div[class^="messagesErrorBar"] div[class*="barButtonBase_"] {
        color: $crust;
      }

      // code stuff
      // [class*="after_inlineCode_"],
      // [class*="before_inlineCode_"],
      // [class^="syntaxBefore"],
      // [class^="syntaxAfter"] {
      //   color: $overlay0;
      // }

      [class*="inlineCode_"] {
        background: $surface0;
      }

      code.inline {
        background: $surface0;
      }

      div[class^="container"] div[class^="cardWrapper"] {
        div[class*="completed_"] {
          svg[class^="checkmark"] {
            background-color: $green;
            color: $crust;
          }
        }
      }
    }
  }
  form {
    background-color: #{$base};
    div[class^="channelBottomBarArea"] {
      // text input area
      div[class^="channelTextArea"] {
        background-color: #{$crust};
        div[class^="floatingBars"] {
          background-color: #{$crust};
        }
        // reply bar
        div[class^="stackedBars"] {
          background-color: #{$crust};
        }
      }
    }
  }
}

div[class*="wrapperAudio_"],
div[class*="imageWrapper_"] {
  div[class*="audioControls"],
  div[class*="videoControls_"] {
    background-color: #{adjust-color($crust, $alpha: -0.2)};

    svg[class*="controlIcon_"] {
      opacity: 1;
      color: $subtext1;
    }

    div[class*="mediaBarInteractionVolume"] {
      background-color: #{adjust-color($crust, $alpha: -0.2)};
    }
  }
}

// arrow when someone joins
div[style*="d1382af8d9e755bc44811b1fd92990a8.svg"] {
  background-image: url("data:image/svg+xml,%3Csvg height='18' width='18' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cpath d='m18 0h-18v18h18z'/%3E%3Cpath d='m0 8h14.2l-3.6-3.6 1.4-1.4 6 6-6 6-1.4-1.4 3.6-3.6h-14.2' fill='%23#{str-slice(inspect($green), 2)}'/%3E%3C/g%3E%3C/svg%3E") !important;
  filter: none !important;
}

// server boost icon... again
main[class^="chatContent"] div[id^="message-content"] svg[class^="icon"] {
  > path[d="M4 0L0 4V8L4 12L8 8V4L4 0ZM7 7.59L4 10.59L1 7.59V4.41L4 1.41L7 4.41V7.59Z"],
  > path[d="M2 4.83V7.17L4 9.17L6 7.17V4.83L4 2.83L2 4.83Z"] {
    color: $pink;
  }
}

@mixin header-list($bgc) {
  h1,
  h2,
  h3,
  h4,
  h5,
  ul li,
  ol li {
    & > span {
      background-color: $bgc;
    }
  }
}

// spoiler messages
.theme-dark,
.theme-light {
  span[class^="spoilerContent"],
  div[class^="spoilerContent"] {
    background-color: $surface0;

    &[class*="hidden"] {
      background-color: $surface2;

      &:hover {
        background-color: lighten($surface2, 5%);
      }
    }
  }

  span[class*="spoilerMarkdownContent"] {
    @include header-list($surface0);
    //background-color: $surface0;

    &[class*="hidden"] {
      //background-color: $surface2;
      @include header-list($surface2);

      &:hover {
        //background-color: lighten($surface2, 5%);
        @include header-list(lighten($surface2, 5%));
      }
    }

    pre div[class^="codeContainer"]:hover {
      background-color: lighten($surface2, 5%);
      border-radius: 4px;
    }
  }

  div[class^="spoilerContainer"] {
    div[class^="spoilerWarning"] {
      color: $text;
      background-color: adjust-color($crust, $alpha: -0.3);
    }

    &:hover {
      div[class^="spoilerWarning"] {
        color: $text;
        background-color: $crust;
      }
    }

    article[class*="embedFull_"] {
      border-color: $surface2;
    }
  }
}

// cooldown text
div[class^="cooldownWrapper"] {
  color: var(--text-muted) !important;
}

// autocomplete chat textboxes
div[class*="autocomplete_"] {
  background-color: $mantle !important;

  div[class*="categoryHeader"] {
    background-color: $mantle !important;
  }
  div[class*="autocompleteRowSubheading"] {
    background-color: transparent;
  }
  div[class*="autocompleteRowContentSecondary"] {
    background-color: transparent;
  }
  div[class^="usageWrapper"] > div[class*="title_"] {
    color: $brand !important;
  }

  strong {
    color: $brand !important;
  }
}

// emoji button
div[class^="channelTextArea"] button[class*="emojiButton_"] {
  background: transparent !important;
}

// upload???
[class^="uploadDropModal"] {
  &[class*="error"] {
    background-color: $red;
  }

  div[class^="inner"] {
    border-color: $crust;

    * {
      color: $crust !important;
    }
  }
}

// forums
div[class^="chat"] > div[class^="content"] > div[class^="container"] {
  div[data-list-id^="forum-channel"] {
    background-color: $base;
  }

  div[class^="grid"][class*="scrollerBase"],
  > div[class^="chatContainer"] {
    background-color: $base;
  }

  // forum icons
  div[class^="pinIcon"],
  div[class^="stepStatus"] {
    > svg > path {
      fill: $subtext0;
    }

    // .. but turn the checkmarks crust for the steps
    &[style*="background-color: var(--status-positive-background);"]
      > svg
      > path {
      fill: $crust;
    }
  }

  div[class*="countText"] {
    color: $crust;
  }

  // discord icon
  svg[class^="discordIcon"] {
    background-color: $brand;
    color: $crust;
  }

  // new badge
  div[class^="newBadge"] {
    background-color: $lavender !important;
    color: $crust;
  }

  div[class*="mainCard_"] {
    background-color: $surface0;
  }
}

div[class^="sidebar"] > section[class^="panels"] {
  svg[class*="buttonIcon_"],
  div[class*="buttonContents"] {
    fill: $text;
    color: $text;
  }
}

[data-list-id^="forum-channel-list"] {
  div[class^="body"] > div[class^="tags"] div[class*="pill"] {
    background-color: $mantle;
  }

  // new post button
  button[class^="submitButton"][class*="colorBrand"] {
    background-color: $brand;
    color: $crust;
  }
}

// Bot slash command field
div[class^="applicationCommand"] {
  span[class*="selectedPill_"] {
    border-color: $brand !important;
  }

  span[class*="erroredPill_"] {
    border-color: $red !important;
  }
}

// fix the sidebar on smaller servers
div[class^="chat"]
  > div[class^="content"]
  main[class^="chatContent"]
  + div[class^="container"] {
  background-color: var(--background-secondary);
}

// fix error border when attempting to start a thread with no message
[class*="channelTextAreaInnerError_"] {
  border: 1px solid $red !important;
}

// Start of channel Icons
div[class^="messagesWrapper"]
  ol[class^="scrollerInner"]
  > div[class^="container"]:not([class*="cozy"]) {
  div[class^="emptyChannelIcon"] {
    background-image: url("data:image/svg+xml,%3Csvg fill='rgb(#{red($crust), green($crust), blue($crust)})' height='44' viewBox='0 0 44 44' width='44' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath clip-rule='evenodd' d='m10.295 38.5c-.31112 0-.54669-.2811-.49232-.5874l1.19742-6.7459h-6.73825c-.31061 0-.54605-.2803-.49251-.5862l.46666-2.6667c.04187-.2392.24963-.4138.49252-.4138h6.91328l1.9433-11h-6.73825c-.31061 0-.54605-.2802-.49251-.5862l.46666-2.6667c.04187-.2392.24963-.4138.49252-.4138h6.91328l1.2284-6.92068c.0424-.23871.2499-.41262.4923-.41262h2.651c.3111 0 .5467.28107.4923.58738l-1.1974 6.74592h11l1.2284-6.92068c.0424-.23871.2499-.41262.4924-.41262h2.651c.3111 0 .5467.28107.4923.58738l-1.1974 6.74592h6.7382c.3106 0 .5461.2803.4925.5862l-.4666 2.6667c-.0419.2392-.2497.4138-.4925.4138h-6.9133l-1.9433 11h6.7382c.3106 0 .5461.2802.4925.5862l-.4666 2.6667c-.0419.2392-.2497.4138-.4925.4138h-6.9133l-1.2284 6.9207c-.0424.2387-.2499.4126-.4923.4126h-2.651c-.3111 0-.5467-.2811-.4924-.5874l1.1975-6.7459h-11l-1.2285 6.9207c-.0423.2387-.2498.4126-.4923.4126zm6.9576-22-1.9434 11h11l1.9434-11z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: center;

    // on desktop this doesn't exist! splendid!
    > svg {
      display: none;
    }
  }

  div[class^="iconWrapper"] {
    background-color: $brand;
    svg[class^="icon"] {
      color: $crust;
    }
  }
}

// Jump to Present bar text
div[class^="jumpToPresentBar"] {
  button[class*="barButtonBase_"] {
    color: $crust !important;
  }

  span[class^="item"] {
    background-color: $crust;
  }
}

// calls
div[class^="callContainer"] {
  [class*="controlIcon_"] {
    color: $subtext1;

    &:hover {
      color: $text;
    }
  }

  div[class*="overlayTitle"],
  svg[class*="status_"] {
    background-color: $surface0;
    color: $text;
  }

  div[class*="header"],
  svg[class*="selectedIcon_"] {
    color: $text;
  }

  div[class*="button_"][class*="contents_"],
  button[class*="cta_"],
  button[class*="participantsButton_"] {
    background-color: $surface0;
    color: $text;
  }

  // call quality and nitro indicator
  div[class^="indicators"] {
    div[class^="liveQualityIndicator"] {
      background-color: $red !important;

      svg[class^="premiumStreamIcon"] {
        color: $crust;
      }
    }
  }

  div[class^="videoControls"] {
    div[class^="children"] {
      div[class*="playingText_"] {
        color: $subtext1;
      }
    }

    div[class^="bottomControls"] {
      button[class^="textButton"] {
        color: $text;
        background-color: $surface1;
      }
    }

    div[class^="toolbar"] {
      svg[class^="controlIcon"] {
        color: var(--interactive-normal);
      }

      div[class^="streamQualityIndicator"] div[class^="liveQualityIndicator"] {
        background-color: $surface1 !important;

        div[class^="qualityIndicator"] {
          color: $text;
        }

        svg[class^="premiumStreamIcon"] {
          color: $text;
        }
      }

      div[class^="liveIndicator"] div[class^="live"] {
        background-color: $red !important;
        color: $crust !important;
      }

      div[class*="clipsEnabledIndicator"] {
        // This covers clipBadgeIcon and clipBadgeText
        div[class^="clipBadge"] {
          background-color: $brand !important;
          color: $crust;
        }
      }
    }

    button[class*="leftTrayIcon_"][class*="buttonColor_"] {
      background-color: $surface0;
      color: $text;
    }

    div[class^="badge"] {
      color: $crust;
    }

    [class*="colorable_"] {
      &[class*="red_"] {
        background: $red;

        [class*="centerIcon_"] {
          color: $crust;
        }

        svg[class^="contextMenuCaret"] path {
          stroke: $crust !important;
        }
      }

      &[class*="primaryDark_"] {
        background: $surface1;
        color: $text;

        [class*="centerIcon_"] {
          color: $text;
        }

        svg[class^="raisedHandButtonIcon"] {
          color: $text;
        }
      }

      &[class*="green_"] {
        background: $green;

        [class*="centerIcon_"] {
          color: $crust;
        }
      }

      &[class*="white_"] {
        color: $crust;
        background-color: $subtext1;

        [class*="centerIcon_"] {
          color: $crust;
        }

        &:hover,
        &[class*="active_"] {
          background: $text;
        }
      }
    }
  }
}

// Weird gradient thing on forums
div[class^="chat"] section[class*="forumOrHome_"] {
  background-color: $base;
  div[class^="upperContainer"] > div[class^="children"]:after {
    background: none;
  }
}

// gifts
div[class*="giftCodeContainer"] [class*="tile"] {
  background-color: $mantle;

  > [class*="description"] {
    color: $text;
  }
}

// channels & roles
div[class*="chat_"] {
  div[class*="content_"][class*="container_"] {
    // customise
    --background-primary: #{$surface0};
    --background-secondary: #{$base}; // dropdown menu
    --background-secondary-alt: #{$mantle}; // roles
    --background-tertiary: #{$mantle};
    --input-background: #{$mantle};
    --white-500: #{$crust}; // check icon

    // channels
    div[class*="search_"] input::placeholder {
      color: $overlay1;
    }
    div[class^="channelRow_"] {
      &:hover:not([class*="disabled_"]) {
        background-color: $surface1;
      }
      button {
        border-color: $overlay0;
        &:hover {
          background-color: $overlay0;
        }
      }
    }
  }
}

[class*="textBadge_"] {
  color: $crust;
}

div[class*="chat_"] {
  // Search Box
  section[class*="title"] div[class*="searchBar"] span[class*="search"] {
    background-color: $surface0;
    color: $text;
  }

  // Search Results Active Button
  @at-root nav[class*="pageControl"]
      div[class*="roundButton"][class*="activeButton"] {
    &,
    span {
      color: $crust;
    }
  }
}

div[class*="chat_"] {
  // Forum Gallery View
  li[class*="mainCard_"][class*="container"] {
    background-color: $surface0;

    &:hover {
      background-color: $surface1;
    }

    div[class*="contentPreview_"] {
      background-color: $base;
      border: none;

      div[class*="textContentFooter_"] {
        background: none;
      }
    }

    div[class*="tags_"] {
      div[class*="tagPill_"] {
        background-color: #{adjust-color($surface1, $alpha: -0.2)};
      }
    }
  }

  // Empty Pages
  div[class*="emptyPage"] {
    background-color: $base;
  }

  // Stupid gradient
  div[class*="innerHeader"]:after {
    background: none;
  }
}

// spotify listen along invite
[id*="message-accessories-"] > [class*="invite_"] {
  background-color: $base;
  [class*="inFront_"][class*="header_"] {
    color: $subtext0;
  }
  [class*="partyStatus_"] {
    color: $text;
  }
}

// typing indicator
[class^="avatar"] [class^="dots"] {
  color: $base;
}

// members tab
div[class^="chat"][class*="page_"] {
  &,
  div[class*="content_"][class*="container_"] {
    background-color: $crust !important;
  }
}

// Server Guide
div[class^="chat"] div[class^="homeContainer"] {
  height: 100%;
}

// Vencord's deleted message plugin
.messagelogger-deleted div {
  color: $red !important;
}
.messagelogger-deleted div a {
  color: #{darken($red, 5%)} !important;
}

// Members sidebar
aside[class^="membersWrap"] {
  height: 100%;
}

// DMs AKA badge
div[class^="upperContainer"] div[class^="akaBadge"] {
  background-color: $brand;
  color: $crust;
}

// system message icons
div[class^="message"][class*="isSystemMessage"] div[class^="icon"] {
  // User Joined icon
  &[style*="/assets/b754caa743f8c49fbbf0.svg"],
  // Answered call icon
  &[style*="/assets/d750b80048af0194841b.svg"] {
    @include recolor($green);
  }

  // Missed call icon
  &[style*="/assets/27552340cbc7f06073e6.svg"] {
    @include recolor($subtext0);
  }

  // User left icon
  &[style*="/assets/27552340cbc7f06073e6.svg"] {
    @include recolor($red);
  }
}
